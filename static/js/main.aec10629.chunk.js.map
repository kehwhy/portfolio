{"version":3,"sources":["components/CV/CV.js","components/Projects/Projects.js","App.js","serviceWorker.js","index.js","Images/profile_pic.png"],"names":["CV","Pane","className","Heading","size","Paragraph","Projects","Card","marginLeft","elevation","border","Badge","color","href","App","src","profile_pic","alt","icon","FaLinkedin","FaGithub","FaEnvelope","Tabs","classname","defaultActiveKey","id","Tab","eventKey","title","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.aec10629.chunk.js","sourcesContent":["import { Heading, Pane, Paragraph } from 'evergreen-ui'\r\nimport React from 'react'\r\nimport \"./CV.css\"\r\n\r\nconst CV = () => {\r\n    return (\r\n        <Pane className=\"CV\">\r\n            <span>\r\n                <Heading size={600}>Education</Heading>\r\n                <Heading size={500}>McGill University — Bachelor's of Software Engineering</Heading>\r\n                <Paragraph size={100} className=\"expected-grad\">Expected Graduation: Fall 2022</Paragraph>\r\n                <Paragraph size={200} className=\"list-header\">Noteable Courses:</Paragraph>\r\n                <ul>\r\n                    <li><Paragraph size={100}>Introduction to Computer Science (Winter 2019)</Paragraph></li>\r\n                    <li><Paragraph size={100}>Model-Based Programming (Winter 2019)</Paragraph></li>\r\n                    <li><Paragraph size={100}>Introduction to Software Engineering (Fall 2019)</Paragraph></li>\r\n                    <li><Paragraph size={100}>Software Engineering Practices (Fall 2019)</Paragraph></li>\r\n                    <li><Paragraph size={100}>Data Structures and Algorithms (Fall 2020)</Paragraph></li>\r\n                    <li><Paragraph size={100}>Artificial Intelligence (Winter 2021)</Paragraph></li>\r\n                </ul>\r\n            </span>\r\n            <span>\r\n                <Heading size={600}>Skills</Heading>\r\n                <Paragraph><strong>Programming Languages:</strong> Java, Python, JavaScript (React, Vue.js, Node.js),  HTML/CSS, C, Bash,  Assembly, OCaml</Paragraph>\r\n                <Paragraph><strong>Software Tools:</strong>  Git/GitHub/GitLab, VS Code, Eclipse, Andriod Studio, JIRA, Confluence, JUnit, Spring Boot, Gradle, TravisCI,  XCode, Heroku, UML Lab, Umple</Paragraph>\r\n                <Paragraph><strong>Languages:</strong>  English and French (Intermediate)</Paragraph>\r\n            </span>\r\n            <span>\r\n                <Heading size={600}>Industry Experience</Heading>\r\n                <Heading size={500}> Ubisoft Montreal — Web Development Intern</Heading>\r\n                <Paragraph className=\"expected-grad\">Aug 2020 - December 2020</Paragraph>\r\n                <ul>\r\n                    <li>\r\n                        <Paragraph size={100}>\r\n                            Developed a web interface in React to better connect monetization specialists\r\n                            to secondary (in-game) stores, improving user experience by facilitating version \r\n                            control as well as drastically simplifying management of products and discounts for \r\n                            several productions company-wide. \r\n                        </Paragraph>\r\n                    </li>\r\n                    <li>\r\n                        <Paragraph size={100}>\r\n                            Created new React components, fixed bugs and wrote tests using the testing framework Jasmine.\r\n                        </Paragraph>\r\n                    </li>\r\n                </ul>\r\n            </span>\r\n            <span>\r\n                <Heading size={600}>Involvement</Heading>\r\n                <Heading size={500}> Electrical, Computer and Software Engineering Student Society (ECSESS) at McGill University — Vice President of External Activities</Heading>\r\n                <Paragraph className=\"expected-grad\">May 2020 - Present</Paragraph>\r\n                <ul>\r\n                    <li>\r\n                    <Paragraph size={100}>\r\n                        Selected to represent the ECSESS Council to potential industry partners \r\n                        and connect students with industry leaders through networking and other \r\n                        professional development events and initiatives. \r\n                    </Paragraph>\r\n                    </li>\r\n                </ul>\r\n                <Heading size={500}> Code.Jam(2019) and Code.Jam(2020) Organizer, Montreal — Marketing Coordinator</Heading>\r\n                <Paragraph className=\"expected-grad\">May 2019 – November 2019 AND May 2020 – November 2020</Paragraph>\r\n                <ul>\r\n                    <li>\r\n                    <Paragraph size={100}>\r\n                    Organized both Code.Jam(2019) and Code.Jam(2020), \r\n                    yearly editions of a 36 hour hackathon with 300 participants and 60, 000 $ in sponsorship. \r\n                    </Paragraph>\r\n                    </li>\r\n                    <li>\r\n                    <Paragraph size={100}>\r\n                    Primary creator of Code.Jam() advertising materials and responsible for the event’s social media presence including\r\n                    responding to questions and creating content for the Facebook, LinkedIn\r\n                    and Instagram pages.\r\n                    </Paragraph>\r\n                    </li>\r\n                </ul>\r\n            </span>\r\n        </Pane>\r\n    )\r\n}\r\n\r\nexport default CV","import React from 'react'\r\nimport \"./Projects.css\"\r\n\r\nimport { Badge, Card, Heading, Pane, Paragraph } from 'evergreen-ui'\r\n\r\nconst Projects = () => {\r\n    return (\r\n        <Pane className=\"tab-pane\">\r\n            <Card className=\"card\" marginLeft={20} elevation={2} border={true}> \r\n                <Heading className=\"title\" size={600}>McGill Engineering Week Event Website</Heading>\r\n                <div className=\"badges\">\r\n                    <Badge className=\"badge\" color=\"orange\">Javascript(React.js)</Badge>\r\n                    <Badge className=\"badge\" color=\"red\">HTML/CSS</Badge>\r\n                </div>\r\n                <Paragraph size={500}>\r\n                    I volunteered to create the website for McGill Engineering Week, a week full of friendly competition\r\n                    between the engineering departments at McGill University. The website was build using the React framework with the help of the Evergreen-UI component library and the Font Awesome icon library.\r\n                    Additionally, I used React Router to route the different tabs located in the website's header. The source code can be found here. \r\n                    <br/>\r\n                    <a href=\"https://github.com/kehwhy/E-Week_Website\">View Source Code</a>\r\n                </Paragraph>\r\n            </Card>\r\n            <Card className=\"card\" marginLeft={20} elevation={2} border={true}> \r\n                <Heading className=\"title\" size={600}>Nutrigo Android Application</Heading>\r\n                <div className=\"badges\">\r\n                    <Badge className=\"badge\" color=\"teal\">Design</Badge>\r\n                    <Badge className=\"badge\" color=\"purple\">Python/Django</Badge>\r\n                    <Badge className=\"badge\" color=\"yellow\">Databases</Badge>\r\n                    <Badge className=\"badge\" color=\"neutral\">Android Studio</Badge>\r\n                </div>\r\n                <Paragraph size={500}>\r\n                    I worked in a team of 15 people, leading a sub-team of 5 android developers, to develop a calorie tracking app\r\n                    that allows users to add food items and meals to track their intake and meet their goals. During this project, \r\n                    I learned about project management, specifically, how to maintain a backlog, lead a scrum meeting and create comprehensive documentation.\r\n                </Paragraph>\r\n            </Card>\r\n            <Card className=\"card\" marginLeft={20} elevation={2} border={true}> \r\n                <Heading className=\"title\" size={600}>3..2..1..Tutor!</Heading>\r\n                <div className=\"badges\">\r\n                    <Badge className=\"badge\" color=\"teal\">Design</Badge>\r\n                    <Badge className=\"badge\" color=\"green\">Java</Badge>\r\n                    <Badge className=\"badge\" color=\"yellow\">Databases</Badge>\r\n                    <Badge className=\"badge\" color=\"orange\">Javascript(Vue.js)</Badge>\r\n                    <Badge className=\"badge\" color=\"neutral\">Android Studio</Badge>\r\n                </div>\r\n                <Paragraph size={500}>\r\n                    Working with a team of 5 students, we developed an account-based application for tutors, allowing them to easily \r\n                    manage their availability and upcoming appointments and requests from students using the Springboot framework for backend and the Vue.js\r\n                    framework for web development as well as a reduced functionality frontend with Android Studio.\r\n                </Paragraph>\r\n            </Card>\r\n            <Card className=\"card\" marginLeft={20} elevation={2} border={true}> \r\n                <Heading className=\"title\" size={600}>Personal Website</Heading>\r\n                <div className=\"badges\">\r\n                    <Badge className=\"badge\" color=\"orange\">Javascript(React.js)</Badge>\r\n                    <Badge className=\"badge\" color=\"red\">HTML/CSS</Badge>\r\n                </div>\r\n                <Paragraph size={500}>\r\n                    I created this personal website using the React framework with the help of the Evergreen-UI component library and the Font Awesome icon library.\r\n                    The website is currently hosted on GitHub Pages and the source code can be found here. \r\n                    <br/>\r\n                    <a href=\"https://github.com/kehwhy/portfolio\">View Source Code</a>\r\n                </Paragraph>\r\n            </Card>\r\n            <Card className=\"card\" marginLeft={20} elevation={2} border={true}> \r\n                <Heading className=\"title\" size={600}>Block223</Heading>\r\n                <div className=\"badges\">\r\n                    <Badge className=\"badge\" color=\"teal\">Design</Badge>\r\n                    <Badge className=\"badge\" color=\"green\">Java</Badge>\r\n                    <Badge className=\"badge\" color=\"red\">UML</Badge>\r\n                </div>\r\n                <Paragraph size={500}>\r\n                    As a project for ECSE223: Introduction to Model-Based\r\n                    Programming, I worked in a team of 6 to produce our take on the classic BrickBreaker game using Umple, \r\n                    Java, and Java Swing.\r\n                </Paragraph>\r\n            </Card>\r\n        </Pane>\r\n    )\r\n}\r\n\r\nexport default Projects","import React from 'react';\r\nimport profile_pic from \"./Images/profile_pic.png\"\r\nimport { FaLinkedin, FaGithub, FaEnvelope } from 'react-icons/fa'\r\nimport Tabs from \"react-bootstrap/Tabs\"\r\nimport Tab from \"react-bootstrap/Tab\"\r\nimport { Heading, Icon, Pane, Paragraph } from \"evergreen-ui\"\r\nimport CV from './components/CV/CV';\r\nimport Projects from './components/Projects/Projects';\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <Pane className=\"App\" elevation={3}>\r\n      <Pane className=\"left_pane\"> \r\n        <Pane className=\"container\">\r\n        <img className=\"profile-pic\" src={profile_pic} alt=\"\"/>\r\n        <Heading size={900} className=\"name-title\">\r\n        Katie Younge\r\n        </Heading>\r\n        <Paragraph size={700} className=\"intro\">3rd year Software Engineering student at McGill University\r\n        with a passion for machine learning and artificial intelligence, as well as increasing \r\n        access to technology for children.</Paragraph>\r\n        <div className=\"icons\">\r\n          <div className='icon'>\r\n            <a href={\"https://www.linkedin.com/in/kathleen-younge-777908174/\"}>\r\n                  <Icon color=\"#187795\" icon={FaLinkedin} size={32}></Icon>\r\n            </a>\r\n          </div>\r\n          <div className='icon'>\r\n            <a href={\"https://github.com/kehwhy\"}>\r\n                  <Icon color=\"#187795\" icon={FaGithub} size={32}></Icon>\r\n            </a>\r\n          </div>\r\n          <div className='icon'>\r\n            <a href={\"mailto:kathleen.younge@mail.mcgill.ca\"}>\r\n                  <Icon color=\"#187795\" icon={FaEnvelope} size={32}></Icon>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        </Pane>\r\n      </Pane>\r\n      <Pane className=\"tabs-div\">\r\n        <Tabs classname=\"myClass\" defaultActiveKey=\"CV\" id=\"main-nav-tabs\">\r\n          <Tab eventKey=\"CV\" title=\"CV\">\r\n            <CV/>\r\n          </Tab>\r\n          <Tab eventKey=\"projects\" title=\"Projects\">\r\n            <Projects/>\r\n          </Tab>\r\n        </Tabs>\r\n      </Pane>\r\n    </Pane>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profile_pic.e6221a7f.png\";"],"sourceRoot":""}